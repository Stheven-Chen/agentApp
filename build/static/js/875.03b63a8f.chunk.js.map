{"version":3,"file":"static/js/875.03b63a8f.chunk.js","mappings":"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","sources":["component/barChart.tsx","component/function/formatcurrency.ts","component/mainBox.tsx","component/nav.tsx","component/tab.tsx","pages/commision.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\ntype Props = {\r\n    data:any;\r\n    options:any;\r\n}\r\n\r\nconst BarChart = (props: Props) => {\r\n\r\n\r\n  return (\r\n    <Bar data={props.data} options={props.options} />\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default BarChart","const formatCurrency = (input:string) => {\r\n    // Menghilangkan semua karakter selain digit\r\n    const value = input.replace(/[^0-9]/g, \"\");\r\n  \r\n    // Mengkonversi string ke number\r\n    const number = parseInt(value);\r\n  \r\n    // Memeriksa apakah nilai input adalah NaN\r\n    if (isNaN(number)) {\r\n      // Mengembalikan nilai kosong jika nilai input adalah NaN\r\n      return \"\";\r\n    } else {\r\n      // Memformat angka ke dalam format currency\r\n      const formattedValue = \"Rp \" + number.toLocaleString(\"id-ID\");\r\n  \r\n      // Mengembalikan nilai input field dengan format currency\r\n      return formattedValue;\r\n    }\r\n  };\r\n\r\n  export default formatCurrency;","import React from 'react'\r\n\r\ntype Props = {content:any}\r\n\r\nconst MainBox = (props: Props) => {\r\n  return (\r\n    <main className='font-Poppins rounded-30px px-8 py-6 bg-login mb-16 min-h-screen  w-screen' >{props.content}</main>\r\n  )\r\n}\r\n\r\nexport default MainBox","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../reducers/userSlice';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\ntype Props = {}\r\n\r\nconst Nav = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    navigate('/agent/');\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"flex items-center justify-between bg-primary w-full h-14 lg:h-78px font-Poppins px-4 lg:px-2\">\r\n        <span className=\"text-xl font-bold text-white\">BCA Insurance</span>\r\n        <img className=\"w-10 h-7\" src=\"/agent/assets/logout.svg\" alt=\"logout\" onClick={handleLogout} />\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\ntype Props = {};\r\n\r\nconst Tab = (props: Props) => {\r\n    const navigate =useNavigate();\r\n\r\n    const home = () =>{\r\n        navigate('/agent/home')\r\n    }\r\n    const application = () =>{\r\n        navigate('/agent/application')\r\n        \r\n    }\r\n    const commision = () =>{\r\n        navigate('/agent/commision')\r\n\r\n    }\r\n  return (\r\n    <div className=\"flex items-center justify-between  fixed bottom-0 left-0 w-full z-50 bg-primary h-14 p-5 font-Poppins rounded-t-30px\">\r\n      <div onClick={home} className=\"flex items-center justify-center flex-col w-20\">\r\n        <img className='w-5 h-5' src=\"/agent/assets/home.svg\" alt=\"home\" />\r\n        <span className=\"text-white\">Home</span>\r\n      </div>\r\n      <div onClick={application} className=\"flex items-center justify-center flex-col w-20\">\r\n        <img  className='w-5 h-5' src=\"/agent/assets/application.svg\" alt=\"application\" />\r\n        <span className=\"text-white\">Application</span>\r\n      </div>\r\n      <div onClick={commision} className=\"flex items-center justify-center flex-col w-20\">\r\n        <img  className='w-5 h-5' src=\"/agent/assets/commision.svg\" alt=\"commision\" />\r\n        <span className=\"text-white\">Commision</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import React, {useState, useEffect} from 'react'\r\nimport Nav from '../component/nav'\r\nimport Tab from '../component/tab'\r\nimport MainBox from '../component/mainBox';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../reducers/userSlice';\r\nimport BarChart from '../component/barChart';\r\nimport formatCurrency from '../component/function/formatcurrency';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux';\r\nimport {setCom} from '../reducers/comSlice';\r\n\r\n\r\n\r\nconst Commision:React.FC = () => {\r\n  const [data, setData] = useState({\r\n    minggu:'',\r\n    bulan:'',\r\n    tahun:'',\r\n    showCom:''\r\n    });\r\n  const { username } = useSelector((state: RootState) => state.username);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    const fetchCom = async () =>{\r\n      \r\n      // const res = await fetch(`http://192.168.137.1:3001/${username}/commision`);\r\n      const res = await fetch(`https://agentserver-production.up.railway.app/${username}/commision`);\r\n      const com = await res.json();\r\n      setData({\r\n        minggu: com[0].commission.mingguan,\r\n        bulan: com[0].commission.bulanan,\r\n        tahun: com[0].commission.tahunan,\r\n        showCom:com[0].commission.mingguan,\r\n      })\r\n      // console.log(com[0].commission.tahunan)\r\n    }\r\n    fetchCom()\r\n  },[username])\r\n\r\n  const {minggu, bulan, tahun, showCom} = data;\r\n  \r\n\r\n  const onClick = () =>{\r\n    dispatch(setCom({jumlah:Object.values(minggu).flatMap(arr => arr).reduce((acc, cur) => acc + Number(cur), 0)}))\r\n    navigate('withdraw')\r\n  }\r\n  return (\r\n    <>\r\n    <Nav/>\r\n    <MainBox\r\n    content={\r\n      <>\r\n        <span className=\"text-xl font-semibold font-Poppins\" >Commision</span>\r\n\r\n        <div className='text-xl font-semibold flex justify-between items-center mt-5 font-Poppins'>\r\n          {minggu ? (\r\n            <div className='flex flex-col'>\r\n              <span>{`${formatCurrency(Object.values(minggu).flatMap(arr => arr).reduce((acc, cur) => acc + Number(cur), 0).toString())}`}</span>\r\n              <span className='text-sm text-gray-500'>Commision This Month</span>\r\n            </div>\r\n          ):<span>-</span>}\r\n\r\n          <button onClick={onClick} className='bg-emerald-500 text-white rounded-xl p-2 text-lg shadow-lg transform-gpu transition-transform duration-300 active:scale-90'>Withdraw</button>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"flex flex-col mt-5 justify-center items-center font-Poppins\">\r\n        {tahun && (\r\n                <div className=\"bg-white w-full rounded-xl shadow-lg p-4\">\r\n                  <span className=\"text-2xl font-semibold font-Poppins text-dark\">Premi</span>\r\n                  <div className=\"flex justify-between items-center my-2 space-x-4\">\r\n                    <button\r\n                      className=\"bg-sky-500 rounded-full w-16 text-sm text-white\"\r\n                      onClick={() => setData({ ...data, showCom: minggu })}\r\n                    >\r\n                      Week\r\n                    </button>\r\n                    <button\r\n                      className=\"bg-sky-500 rounded-full w-16 text-sm text-white\"\r\n                      onClick={() => setData({ ...data, showCom: bulan })}\r\n                    >\r\n                      Month\r\n                    </button>\r\n                    <button\r\n                      className=\"bg-sky-500 rounded-full w-16 text-sm text-white\"\r\n                      onClick={() => setData({ ...data, showCom: tahun })}\r\n                    >\r\n                      Year\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"mt-4 mx-auto max-w-lg \">\r\n                    <BarChart\r\n                      data={{\r\n                        labels: Object.keys(showCom),\r\n                        datasets: [\r\n                          {\r\n                            label: 'Commision',\r\n                            data: Object.values(showCom),\r\n                            backgroundColor: \r\n                              // '#FF5733', // Merah\r\n                              // '#FFC300', // Kuning\r\n                              // '#4CAF50', // Hijau\r\n                              // '#2196F3', // Biru\r\n                              // '#9C27B0', // Ungu\r\n                              // '#FF9800', // Jingga\r\n                              '#E91E63', // Merah Muda\r\n                              // '#00BCD4', // Cyan\r\n                              // '#FFEB3B', // Kuning Cerah\r\n                              // '#8BC34A', // Hijau Limau\r\n                              // '#3F51B5', // Biru Tua\r\n                              // '#673AB7', // Ungu Tua\r\n                            \r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        responsive: true,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n        </div>\r\n      \r\n      </>\r\n    }\r\n    />\r\n    <Tab/>\r\n    </>  )\r\n}\r\n\r\nexport default Commision"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","props","_jsx","Bar","data","options","input","value","replace","number","parseInt","isNaN","toLocaleString","className","children","content","dispatch","useDispatch","navigate","useNavigate","_Fragment","_jsxs","src","alt","onClick","logout","_useState","useState","minggu","bulan","tahun","showCom","_useState2","_slicedToArray","setData","username","useSelector","state","useEffect","fetchCom","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","com","wrap","_context","prev","next","fetch","concat","sent","json","commission","mingguan","bulanan","tahunan","stop","apply","arguments","Nav","MainBox","formatCurrency","Object","values","flatMap","arr","reduce","acc","cur","Number","toString","setCom","jumlah","_objectSpread","BarChart","labels","keys","datasets","label","backgroundColor","responsive","Tab"],"sourceRoot":""}